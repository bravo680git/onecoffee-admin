name: Deploy to EC2
run-name: Deploy to EC2
on:
  push:
    branches:
      - main
env:
  IMAGE_NAME: bravo680/onecoffee-admin-web
  IMAGE_TAG: latest
  WEB_FOLDER: /var/www/onecoffee-admin-web
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Set up nodejs
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          
      - name: Install dependencies and lint
        run: |
          npm i -g pnpm
          pnpm i
          pnpm lint
          
  Deploy:
    runs-on: ubuntu-latest
    needs: Lint
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Build docker image
        run: |
          echo "${{ secrets.ENVS }}" > .env
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          
      - name: Login to docker hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push to docker hub
        run: docker push $IMAGE_NAME:$IMAGE_TAG
        
      - name: Deploy to EC2
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -tt -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$SSH_HOST \
          "cd $WEB_FOLDER && \
          if [ -f docker-compose.yaml ]; then \
            echo \"docker-compose.yml exists, proceeding with deployment.\" && \
            docker compose down && \
            docker rmi -f $IMAGE_NAME:$IMAGE_TAG && \
            docker pull $IMAGE_NAME:$IMAGE_TAG && \
            docker compose up -d; \
          else \
            echo \"docker-compose.yaml not found in $WEB_FOLDER\" && \
            exit 1; \
          fi"

      - name: Send Telegram notification on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELE_CHANNEL_ID }}
          token: ${{ secrets.TELE_TOKEN }}
          message: "üéâ CI/CD job successful! Workflow: ${{ github.workflow }} | Job: ${{ github.job }}"

      - name: Send Telegram notification on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELE_CHANNEL_ID }}
          token: ${{ secrets.TELE_TOKEN }}
          message: "‚ùå CI/CD job failed! Workflow: ${{ github.workflow }} | Job: ${{ github.job }}"
        
