name: Deploy to EC2
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: bravo680/onecoffee-admin-web
  IMAGE_TAG: latest
  WEB_FOLDER: /var/www/onecoffee-admin-web
  PROJECT: ONe Coffee admin web - production

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up nodejs
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          
      - name: Install dependencies and lint
        run: |
          npm i -g pnpm
          pnpm i
          pnpm lint

      - name: Notify to Telegram
        uses: ./.github/actions/notify
        with:
          status: ${{ job.status }}
          project: ${{ env.PROJECT }}
          token: ${{ secrets.TELE_TOKEN }}
          to: ${{ secrets.TELE_CHANNEL_ID }}

  BuildAndPushImage:
    runs-on: ubuntu-latest
    needs: Lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.ENVS }}" > .env
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Notify to Telegram
        uses: ./.github/actions/notify
        with:
          status: ${{ job.status }}
          project: ${{ env.PROJECT }}
          token: ${{ secrets.TELE_TOKEN }}
          to: ${{ secrets.TELE_CHANNEL_ID }}

  DeployToEC2:
    runs-on: ubuntu-latest
    needs: [BuildAndPushImage]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$SSH_HOST \
          "cd $WEB_FOLDER && \
          if [ -f docker-compose.yaml ]; then \
            echo \"docker-compose.yml exists, proceeding with deployment.\" && \
            docker compose down && \
            docker rmi -f $IMAGE_NAME:$IMAGE_TAG && \
            docker pull $IMAGE_NAME:$IMAGE_TAG && \
            docker compose up -d; \
          else \
            echo \"docker-compose.yaml not found in $WEB_FOLDER\" && \
            exit 1; \
          fi"

      - uses: actions/checkout@v4
      - name: Notify to Telegram
        uses: ./.github/actions/notify
        with:
          status: ${{ job.status }}
          project: ${{ env.PROJECT }}
          token: ${{ secrets.TELE_TOKEN }}
          to: ${{ secrets.TELE_CHANNEL_ID }}

